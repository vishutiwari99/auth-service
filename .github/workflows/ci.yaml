name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "18"
      - name: Install dependencies
        run: npm ci
      - name: Run eslint
        run: npm run lint
      - name: Build
        run: npm run build
      - name: Test and Coverage
        run: npm run test
        env:
          DATABASE_URL: ${{ secrets.TEST_DATABASE_URL }}
          REFRESH_TOKEN_SECRET: ${{ secrets.REFRESH_TOKEN_SECRET }}
          JWKS_URI: ${{ secrets.JWKS_URI }}
          PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}

      - name: Build ts
        run: npm run build
      - name: Sonar Cloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  build-and-push-docker-image:
    name: Build and push Docker image
    needs: build-and-test
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: auth-service
      IMAGE_TAG: build-${{ github.run_number }}
    if: github.ref =='refs/heads/main' && github.event_name == 'push'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Build  Docker image
        run: docker build -t ${{env.IMAGE_NAME}}:${{env.IMAGE_TAG}} -f docker/prod/Dockerfile .
      - name: Push Docker image to DockerHub
        run: docker push ${{env.IMAGE_NAME}}:${{env.IMAGE_TAG}}
